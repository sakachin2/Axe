//*CID://+vc2RR~: update#=  239;                                   //~vc2RR~
//**********************************************************************//~vaagI~
//vc2R 2020/09/11 Debug option:reverse HelpLang                    //~vc2RI~
//vc2L 2020/09/02 display TMPDIR                                   //~vc2LI~
//vc2B 2020/08/12 Help  by file                                    //~vc2BI~
//vc1p 2020/06/24 display path env                                 //~vc1pI~
//vc1j 2020/06/23 display sdcard path on setup dialog:android      //~vc1jI~
//vayd:141125 (Axe)modifier reset option                           //~vayaI~
//vaya:141125 (Axe)utilize actionbar:home button click event(customizable by settion,default is home)//~vayaI~
//vay9:141124 (Axe)checkbox internal option(trace,dump) by checkbox//~vay9I~
//vay0:140710 (Axe)jni exception handling                          //~vay0I~
//vaim:130601 send mouse rbutton event by long press on AxeScreen  //~vaimI~
//vaih:130531 Axe:option to close xekbd dialog when touch outside of dialog//~vaihI~
//vai3:130525 (Axe)hide internal option when release version       //~vai3I~
//v6k1:130524 (Axe)sbcsmap tbl recreate option                     //~v6k1I~
//vad2:120423 (Axe)Charset option by Arm related option dialog     //~vad2I~
//vaag:111223 (Axe)display small char generated by flick on keyboard key//~vaagI~
//**********************************************************************//~vaagI~
package com.xe.Axe;                                                //~@@@@I~

import com.ahsv.AG;
import com.xe.Axe.kbd.AxeKbdDialog;
import com.xe.Axe.kbd.ims.KeyboardView;
import android.text.InputType;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.TextView;
public class AxeDlgArmOption extends AxeDialog                     //~1821R~
{                                                                  //~1606I~
///////////////////////////////////////////////////////////////////////////////~1606I~
//**********************************************************************//~1725I~
	private static final int LAYOUT=R.layout.dialogarmoption;      //~1821R~
	private static final int TITLE =R.string.DialogTitle_ArmOption;//~1821R~
	private static final int HELP_TITLE =TITLE;                    //~vc2BI~
	private static final String HELP_FILE  ="ArmOption";           //~vc2BI~
                                                                   //~1822I~
	private int orientationFix;                                    //~1822I~
    private RadioGroup rgOrientation;                              //~1830R~
//    private RadioGroup rgImeType;                                //~1830I~
//  private EditText   etInternalOption,etSwipeTimeout,etSwipeTravel;                           //~1824I~//~vay9R~
    private EditText                    etSwipeTimeout,etSwipeTravel;//~vay9I~
    private EditText   etRepeatDelay,etRepeatSpeed,etEnvPath;                //~1A09I~//~1A26R~
    private EditText   etCharset;                                  //~vad2I~
    private EditText   etLongPress;                                //~vaimI~
    private CheckBox   cbDisplayFlickKeyCode;                      //~vaagI~
    private CheckBox   cbCancelXekbdByOutsideTouch;                //~vaihI~
    private CheckBox   cbResetModifier;                            //~vayaI~
    private Button     btIMPicker;                                 //~1826I~
    private TextView   tvCurrentIME;                               //~1830I~
    private TextView   tvSDCardPath;                               //~vc1jI~
    private TextView   tvHome;                                     //~vc1jI~
    private TextView   tvWorkDir;                                  //~vc1jI~
    private TextView   tvAddPath;                                  //~vc1jI~
    private TextView   tvCurPath;                                  //~vc1jI~
    private TextView   tvTmp;                                      //~vc2LI~
    private String currentImeName="";                              //~1830I~
//    private CheckBox   cbImeTypeConfirm;                         //~1830R~
    private RadioGroup rgTrace,rgDump;                             //~vay9I~
    private CheckBox   cbLog,cbRemap,cbAbend,cbUerrexit;           //~vay9I~
    private CheckBox   cbDebug_Help_ReverseLang;                   //~vc2RI~
    private RadioGroup rgHomeButtonKey;                            //~vayaI~
    private static int homebuttonId;                               //~vayaR~
    public static int homebuttonKeyValue;                          //~vayaI~
//**********************************                               //~1725I~
	public AxeDlgArmOption()                                       //~1821R~
    {                                                              //~1725I~
    	super(LAYOUT);                                             //~1821R~
    }                                                              //~1725I~
//**********************************                               //~1725I~
    public static AxeDlgArmOption showDialog()                 //~1821R~
    {                                                              //~1725I~
    	AxeDlgArmOption dlg=new AxeDlgArmOption();                 //~1821R~
        String title=Utils.getResourceString(TITLE);               //~1821R~
		dlg.showDialog(title);                                     //~1725I~
        return dlg;                                                //~1725I~
    }                                                              //~1725I~
//*********                                                        //~1725I~
	@Override                                                      //~1725I~
	protected void setupDialogExtend(ViewGroup PlayoutView)        //~1725I~
    {                                                              //~1725I~
    	int buttonid=-1,inputtype;                                           //~1822I~
    //********************                                         //~1821M~
	    rgOrientation=(RadioGroup)layoutView.findViewById(R.id.SCREEN_ORIENTATION);//~1822I~
//	    etInternalOption=(EditText)layoutView.findViewById(R.id.INTERNAL_OPTION);//~vay9R~
		rgTrace=(RadioGroup)layoutView.findViewById(R.id.DEBUG_TRACE);//~vay9I~
		rgDump=(RadioGroup)layoutView.findViewById(R.id.DEBUG_DUMP);//~vay9I~
		cbLog=(CheckBox)layoutView.findViewById(R.id.DEBUG_LOG);   //~vay9I~
		cbRemap=(CheckBox)layoutView.findViewById(R.id.DEBUG_REMAP);//~vay9I~
		cbAbend=(CheckBox)layoutView.findViewById(R.id.DEBUG_ABEND);//~vay9I~
		cbUerrexit=(CheckBox)layoutView.findViewById(R.id.DEBUG_UERREXIT);//~vay9I~
		cbDebug_Help_ReverseLang=(CheckBox)layoutView.findViewById(R.id.Debug_Help_ReverseLang);//~vc2RI~
                                                                   //~vay9I~
	    etCharset=(EditText)layoutView.findViewById(R.id.LOCALE_CHARSET);//~vad2I~
	    etEnvPath=(EditText)layoutView.findViewById(R.id.ENV_PATH);//~1A26I~
	    etRepeatDelay=(EditText)layoutView.findViewById(R.id.REPEAT_DELAY);//~1A09I~
	    etRepeatSpeed=(EditText)layoutView.findViewById(R.id.REPEAT_SPEED);//~1A09I~
	    etSwipeTimeout=(EditText)layoutView.findViewById(R.id.SWIPE_TIMEOUT);//~1A03I~
	    etLongPress=(EditText)layoutView.findViewById(R.id.LONGPRESS_TIMEOUT);//~vaimI~
        cbDisplayFlickKeyCode=(CheckBox)layoutView.findViewById(R.id.DISPLAY_FLICK_KEY);//~vaagI~
        cbCancelXekbdByOutsideTouch=(CheckBox)layoutView.findViewById(R.id.CANCEL_XEKBD_BY_OUTSIDE_TOUCH);//~vaihI~
		cbResetModifier=(CheckBox)layoutView.findViewById(R.id.RESET_MODIFIER);//~vayaI~
	    etSwipeTravel=(EditText)layoutView.findViewById(R.id.SWIPE_TRAVEL);//~1A03I~
    	orientationFix=AxeButtonLayout.getOrientationFix();//oldvalue//~1830M~
	    btIMPicker=(Button)layoutView.findViewById(R.id.IM_PICKER);//~1826I~
	    tvCurrentIME=(TextView)layoutView.findViewById(R.id.CURRENT_IME);//~1830I~
		rgHomeButtonKey=(RadioGroup)layoutView.findViewById(R.id.HOMEBUTTONKEY);//~vayaI~
		tvSDCardPath=(TextView)layoutView.findViewById(R.id.Setup_SDCardPath);//~vc1jI~
		tvHome=(TextView)layoutView.findViewById(R.id.Setup_Home); //~vc1jI~
		tvWorkDir=(TextView)layoutView.findViewById(R.id.Setup_WorkDir);//~vc1jI~
		tvAddPath=(TextView)layoutView.findViewById(R.id.Setup_EnvPathAddHome);//~vc1jR~
		tvCurPath=(TextView)layoutView.findViewById(R.id.Setup_CurEnvPath);//~vc1jI~
		tvTmp=(TextView)layoutView.findViewById(R.id.Setup_EnvPathTmp);//~vc2LI~
                                                                   //~vay9I~
        setButtonListener(btIMPicker);                             //~1826I~
//        rgImeType=(RadioGroup)layoutView.findViewById(R.id.IME_TYPE);//~1830I~
//        cbImeTypeConfirm=(CheckBox)layoutView.findViewById(R.id.IMETYPE_CONFIRM);//~1830I~
//*orientation                                                     //~1828I~
        if (Dump.Y) Dump.println("AxeDialogArmoption old orientation="+orientationFix);//~1822I~
        switch(orientationFix)                                     //~1822I~
        {                                                          //~1822I~
        case AxeButtonLayout.LANDSCAPE:                            //~1822I~
        	buttonid=R.id.SCREEN_FIX_LANDSCAPE;                    //~1822I~
            break;                                                 //~1822I~
        case AxeButtonLayout.PORTRAIT:                             //~1822I~
        	buttonid=R.id.SCREEN_FIX_PORTRAIT;                     //~1822I~
            break;                                                 //~1822I~
        case AxeButtonLayout.ROTATE:                               //~1822I~
        	buttonid=R.id.SCREEN_ROTATE;                           //~1822I~
            break;                                                 //~1822I~
        }                                                          //~1822I~
        if (buttonid>=0)                                           //~1822I~
        {                                                          //~1822I~
        	rgOrientation.check(buttonid);                         //~1822I~
        }                                                          //~1822I~
        if (homebuttonId>0)	//init by AxeG                         //~vayaI~
        	rgHomeButtonKey.check(homebuttonId);                   //~vayaI~
////*IME type                                                      //~1830R~
//        if ((AxeG.imeType & AxeG.IMETYPE_DIALOG)!=0)             //~1830R~
//            rgImeType.check(R.id.IMETYPE_DIALOG);                //~1830R~
//        else                                                     //~1830R~
//            rgImeType.check(R.id.IMETYPE_NODIALOG);              //~1830R~
//        if ((AxeG.imeType & AxeG.IMETYPE_NOCONFIRM)==0)            //~1827I~//~1830R~
//            cbImeTypeConfirm.setChecked(true);  //confirm        //~1830R~
//*LongPress Timeout                                               //~vaimI~
        etLongPress.setText(Integer.toString(AxeG.longPressTimeout));//~vaimI~
//*IME name                                                        //~1830I~
		updateIME();                                               //~1830R~
//*Repeat Key Event                                                //~1A09I~
        etRepeatDelay.setText(Integer.toString(AxeG.repeatDelay)); //~1A09I~
        etRepeatSpeed.setText(Integer.toString(AxeG.repeatSpeed)); //~1A09I~
//*swipe                                                           //~1A03I~
        cbDisplayFlickKeyCode.setChecked(AxeG.displayFlickKey);    //~vaagI~
        etSwipeTimeout.setText(Integer.toString(AxeG.swipeTimeout));//~1A03I~
        etSwipeTravel.setText(Integer.toString(AxeG.swipeTravel)); //~1A03I~
//*cancel xekbd by outside touch                                   //~vaihI~
        cbCancelXekbdByOutsideTouch.setChecked(AxeG.cancelXekbdByOutsideTouch);//~vaihI~
//*resetModifier                                                   //~vayaI~
        cbResetModifier.setChecked(AxeG.resetModifier);            //~vayaI~
//*Env-Path                                                        //~vad2I~
        etCharset.setText(Gxeh.localeCharset);                     //~vad2I~
        inputtype=InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS//xml:inputType="textNoSuggestion" is not work//~vad2I~
                        |InputType.TYPE_CLASS_TEXT;                //~vad2I~
        etCharset.setInputType(inputtype);                         //~vad2I~
//*Env-Path                                                        //~1A26I~
        String cpath=Utils.getResourceString(R.string.Setup_EnvPathAdd);      //~vc1jI~
        if (Gxeh.envPath==null || Gxeh.envPath.equals(""))         //~vc1jR~
        	Gxeh.envPath=cpath;                                    //~vc1jI~
        else                                                       //~vc1jI~
        if (!Gxeh.envPath.endsWith(cpath))                         //~vc1jI~
        	Gxeh.envPath+=":"+cpath;                               //~vc1jI~
        etEnvPath.setText(Gxeh.envPath);                           //~1A26R~
        inputtype=InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS//xml:inputType="textNoSuggestion" is not work//~1A26I~
                        |InputType.TYPE_CLASS_TEXT;                //~1A26I~
        etEnvPath.setInputType(inputtype);                         //~1A26I~
        String cpathenv=Gxeh.envVarPATH;                        //~vc1pR~
        cpathenv=cpathenv.replace(Gxeh.addPath,cpath);             //~vc1jI~
        tvCurPath.setText(cpathenv);                               //~vc1jI~
        tvAddPath.setText(" = "+Gxeh.addPath);                     //~vc1jI~
        String sdpath=Gxeh.sdRootPath;                             //~vc1jI~
        if ((Gxeh.axeStatus & Gxeh.AXES_SDCARD_ALTNAME)!=0)        //~vc1jI~
        	sdpath+=" ( = "+Gxeh.sdRoot+ " )";                     //~vc1jR~
        tvSDCardPath.setText(sdpath);                              //~vc1jR~
        tvHome.setText(" "+Gxeh.homeDir+ " ( = ~/ )");             //~vc1jR~
        tvWorkDir.setText(" "+AxeProp.getWkdir()+" ( = :: )");     //~vc1jR~
        tvTmp.setText(" "+Gxeh.envVarTMPDIR+" ( = $tmp )");        //~vc2LR~
//*internal option                                                 //~1828I~
//        etInternalOption.setText(AxeG.internalOptions);            //~1824I~//~vay9R~
//        inputtype=InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS//xml:inputType="textNoSuggestion" is not work//~vay9R~
//                        |InputType.TYPE_CLASS_TEXT;              //~vay9R~
//        etInternalOption.setInputType(inputtype);                //~vay9R~
	    if (!AxeG.isDebuggable)                                          //~v107R~//~vai3R~
        {                                                          //~vai3I~
        	LinearLayout ioc=(LinearLayout)layoutView.findViewById(R.id.ContainerInternalOption);//~vai3I~
        	ioc.setVisibility(View.GONE);                          //~vai3R~
        }                                                          //~vai3I~
        else                                                       //~vay9I~
        {                                                          //~vay9I~
        	initInternalOption();                                  //~vay9I~
        }                                                          //~vay9I~
    }                                                              //~1821M~
//************************                                         //~1830I~
	@Override                                                      //~1831I~
    public void onWindowFocusChanged(boolean PhasFocus)            //~1831I~
    {                                                              //~1831I~
    	if (Dump.Y) Dump.println("AxeDlgArmOption focusChanged:"+PhasFocus);//~1831I~
        if (PhasFocus)	//focus gained                             //~1831I~
			updateIME();                                           //~1831I~
    }                                                              //~1831I~
//************************                                         //~1831I~
    private void updateIME()                                       //~1830I~
    {                                                              //~1830I~
    	String imename=AxeIME.getCurrentIME();                     //~1830I~
    	if (Dump.Y) Dump.println("AxeDlgArmOption updateIME:"+imename);//~1831I~
        if (!imename.equals(currentImeName))                       //~1830I~
        {                                                          //~1830I~
			currentImeName=imename;                                //~1830I~
			tvCurrentIME.setText(imename);                         //~1830I~
        }                                                          //~1830I~
    }                                                              //~1830I~
//************************                                         //~1821I~
//*dialog button Listener*                                         //~1821I~
//************************                                         //~1821I~
	@Override                                                      //~1821I~
    protected boolean onClickClose()                              //~1821R~//~1826R~
    {                                                              //~1821M~
    	boolean rc=true;	//dismiss                              //~1821I~
        int buttonid,newfix;                                //~1822R~//~1828R~
//        int imetype=AxeG.IMETYPE_NODIALOG;                         //~1828I~
    //****************                                             //~1821M~
        buttonid=rgOrientation.getCheckedRadioButtonId();          //~1822R~
        newfix=orientationFix;                                     //~1822I~
        switch(buttonid)                                           //~1821M~
        {                                                          //~1821I~
        case R.id.SCREEN_FIX_LANDSCAPE:                            //~1821I~
            newfix=AxeButtonLayout.LANDSCAPE;                      //~1822I~
            break;                                                 //~1821I~
        case R.id.SCREEN_FIX_PORTRAIT:                             //~1821I~
            newfix=AxeButtonLayout.PORTRAIT;                       //~1822I~
            break;                                                 //~1821I~
        case R.id.SCREEN_ROTATE:                                   //~1821R~
            newfix=AxeButtonLayout.ROTATE;                         //~1822I~
            break;                                                 //~1821I~
        }                                                          //~1821I~
        if (Dump.Y) Dump.println("AxeDialog old="+orientationFix+",newfix="+newfix);//~1822R~
        if (newfix!=orientationFix)                                //~1822I~
        {                                                          //~1821I~
        	AxeView.requestOrientationFix(newfix);                 //~1822R~
			AxeButtonLayout.setOrientationFix(newfix);	//put to profile//~1822I~
        }                                                          //~1821I~
//*homebuttonkey                                                   //~vayaI~
        buttonid=rgHomeButtonKey.getCheckedRadioButtonId();        //~vayaI~
		AxeG.setParameter(AxeG.PREFKEY_HOMEBUTTONKEY,buttonid);         //~vayaI~
    	chkHomeButtonKey(false/*from AxeG*/,buttonid);             //~vayaI~
                                                                   //~vayaI~
        AxeG.longPressTimeout=Math.max(Utils.strToNum(etLongPress.getText().toString(),AxeG.longPressTimeout),AxeG.MIN_LONGPRESS_TIMEOUT);//~vaimI~
//*display flick key                                               //~vaagI~
		boolean displayold=AxeG.displayFlickKey;                   //~vaagI~
        AxeG.displayFlickKey=cbDisplayFlickKeyCode.isChecked();    //~vaagI~
        if (displayold!=AxeG.displayFlickKey)	//value changed    //~vaagI~
        {                                                          //~vaagI~
        	AxeG.setParameter(AxeG.PREFKEY_DISPLAY_FLICKKEY,AxeG.displayFlickKey);//~vaagR~
            AxeKbdDialog kbddlg=AxeG.axeIME.getXeKbd(false);  //return null if not created//~vaagI~
            if (kbddlg!=null)                                      //~vaagI~
            	kbddlg.invalidateAllKeys();                        //~vaagR~
        }                                                          //~vaagI~
                                                                   //~vaagI~
        AxeG.repeatDelay=Math.max(Utils.strToNum(etRepeatDelay.getText().toString(),AxeG.repeatDelay),AxeG.MIN_REPEAT_DELAY);//~1A09I~
        AxeG.repeatSpeed=Math.max(Utils.strToNum(etRepeatSpeed.getText().toString(),AxeG.repeatSpeed),AxeG.MIN_REPEAT_SPEED);//~1A09I~
        AxeG.setParameter(AxeG.PREFKEY_REPEAT_DELAY,AxeG.repeatDelay);//~1A09I~
        AxeG.setParameter(AxeG.PREFKEY_REPEAT_SPEED,AxeG.repeatSpeed);//~1A09I~
        KeyboardView.REPEAT_START_DELAY=AxeG.repeatDelay;               //~1A09I~
        KeyboardView.REPEAT_INTERVAL=AxeG.repeatSpeed;               //~1A09I~
        if (Dump.Y) Dump.println("AxeDialog repeat delay="+AxeG.repeatDelay+",speed="+AxeG.repeatSpeed);//~1A09I~
                                                                   //~1A09I~
        AxeG.swipeTimeout=Math.max(Utils.strToNum(etSwipeTimeout.getText().toString(),AxeG.swipeTimeout),AxeG.MIN_SWIPE_TIMEOUT);//~1A03I~
        AxeG.swipeTravel=Math.max(Utils.strToNum(etSwipeTravel.getText().toString(),AxeG.swipeTravel),AxeG.MIN_SWIPE_TRAVEL);//~1A03I~
        AxeG.setParameter(AxeG.PREFKEY_SWIPE_TIMEOUT,AxeG.swipeTimeout);//~1A03I~
        AxeG.setParameter(AxeG.PREFKEY_SWIPE_TRAVEL,AxeG.swipeTravel);//~1A03I~
        if (Dump.Y) Dump.println("AxeDialog swipeTimeout="+AxeG.swipeTimeout+",travel="+AxeG.swipeTravel);//~1A03I~
//charset                                                          //~vad2R~
        String cs=etCharset.getText().toString();                  //~vad2I~
        if (!cs.equals(Gxeh.localeCharset))                        //~vad2I~
        {                                                          //~vad2I~
        	if (cs.equals(""))                                     //~vad2I~
            {                                                      //~vad2I~
        		Gxeh.localeCharset=cs;                             //~vad2R~
        		AxeG.setParameter(AxeG.PREFKEY_CHARSET,cs);        //~vad2R~
        		Utils.showToastLong(R.string.Info_CharsetChanged); //~vad2I~
            }                                                      //~vad2I~
            else                                                   //~vad2I~
            {                                                      //~vad2I~
                if (chkCharset(cs)!=0)  //err                      //~vad2R~
                    rc=false;//no dismiss                          //~vad2R~
                else                                               //~vad2R~
                {                                                  //~vad2R~
                    Gxeh.localeCharset=cs;                         //~vad2R~
                    AxeG.setParameter(AxeG.PREFKEY_CHARSET,cs);    //~vad2R~
                }                                                  //~vad2R~
            }                                                      //~vad2I~
        }                                                          //~vad2I~
                                                                   //~vad2I~
        Gxeh.envPath=chkEnvPath(false/*not AxeG(init load pref)*/,etEnvPath.getText().toString());//~1A26R~
        AxeG.setParameter(AxeG.PREFKEY_ENV_PATH,Gxeh.envPath);     //~1A26R~
	    updateEnvPath(true/*PswJNICall*/);                         //~vc1pI~
        if (Dump.Y) Dump.println("AxeDlgArmOption.onClickClose envPath="+Gxeh.envPath+",envVarPATH="+Gxeh.envVarPATH);//~vc1pI~
                                                                   //~1A09I~
//        AxeG.internalOptions=etInternalOption.getText().toString();//~vay9R~
//        AxeG.internalOptions=chkInternalOptions(false/*not AxeG*/,AxeG.internalOptions);//~vay9R~
//        AxeG.setParameter(AxeG.PREFKEY_INTERNAL_OPTIONS,AxeG.internalOptions);//putPreference//~vay9R~
	    if (AxeG.isDebuggable)                                     //~vay9R~
			setInternalOption();                                   //~vay9I~
//*ImeType                                                         //~1828I~
//        buttonid=rgImeType.getCheckedRadioButtonId();            //~1830R~
//                                                                 //~1830R~
//        switch(buttonid)                                         //~1830R~
//        {                                                        //~1830R~
//        case R.id.IMETYPE_DIALOG:                                //~1830R~
//            imetype=AxeG.IMETYPE_DIALOG;                         //~1830R~
//            break;                                               //~1830R~
//        }                                                        //~1830R~
//        imetype|=cbImeTypeConfirm.isChecked()?0:AxeG.IMETYPE_NOCONFIRM;//~1826R~//~1830R~
//        if (imetype!=AxeG.imeType)                               //~1830R~
//        {                                                        //~1830R~
//            AxeG.imeType=imetype;                                //~1830R~
//            AxeG.setParameter(AxeG.PREFKEY_IMETYPE,AxeG.imeType);//~1830R~
//        }                                                        //~1830R~
//cancel xekbd                                                     //~vaihI~
		boolean outsidetouch=AxeG.cancelXekbdByOutsideTouch;       //~vaihI~
        AxeG.cancelXekbdByOutsideTouch=cbCancelXekbdByOutsideTouch.isChecked();//~vaihI~
        if (outsidetouch!=AxeG.cancelXekbdByOutsideTouch)	//value changed//~vaihI~
        {                                                          //~vaihI~
        	AxeG.setParameter(AxeG.PREFKEY_OUTSIDE_TOUCH,AxeG.cancelXekbdByOutsideTouch);//~vaihI~
            AxeKbdDialog kbddlg=AxeG.axeIME.getXeKbd(false);  //return null if not created//~vaihI~
            if (kbddlg!=null)                                            //~vaihI~
	            kbddlg.setCancelByOutsideTouch(AxeG.cancelXekbdByOutsideTouch);//~vaihI~
        }                                                          //~vaihI~
		boolean oldresetmodifier=AxeG.resetModifier;               //~vayaI~
        AxeG.resetModifier=cbResetModifier.isChecked();            //~vayaI~
        if (oldresetmodifier!=AxeG.resetModifier)	//value changed//~vayaI~
        {                                                          //~vayaI~
        	AxeG.setParameter(AxeG.PREFKEY_RESET_MODIFIER,AxeG.resetModifier);//~vayaI~
        }                                                          //~vayaI~
        return rc;                                                 //~1821I~
    }                                                              //~1821M~
    //****************************************                     //~1826I~
    //*IMPicker button                                             //~1826I~
    //****************************************                     //~1826I~
	@Override                                                      //~1826I~
    protected boolean onClickOther(int PbuttonId)                    //~1826I~
    {                                                              //~1826I~
    	boolean rc=false;   //not dismiss at return                //~1826I~
    //****************                                             //~1826I~
        if (Dump.Y) Dump.println("AxeDlgArmOption onClickOther buttonid="+Integer.toHexString(PbuttonId));//~1826I~//~vc1pR~
        switch(PbuttonId)                                          //~1826I~
        {                                                          //~1826I~
        case R.id.IM_PICKER:                                       //~1826I~
	       	AxeG.axeIME.changeIME();                               //~1825I~//~1826I~
            break;                                                 //~1826I~
        }                                                          //~1826I~
        return rc;                                                 //~1826I~
    }                                                              //~1826I~
//******************                                               //~1A03I~
	@Override                                                      //~1602I~//~1A03I~
    protected boolean onClickHelp()                                //~1821R~//~1A03I~
    {                                                              //~1528I~//~1A03I~
//    	showDialogHelp(R.string.HelpTitle_ArmOption,R.string.Help_ArmOption);//~1821R~//~1A03I~//~vc2BR~
    	showDialogHelp(HELP_TITLE,HELP_FILE);                      //~vc2BI~
        return false;	//no dismiss                               //~1821R~//~1A03I~
    }                                                              //~1528I~//~1A03I~
//******************                                               //~1A26I~
//*Env-PATH                                                        //~1A26I~
//******************                                               //~1A26I~
    public static String chkEnvPath(boolean PaxeGinit,String Poptions)//~1A26I~
    {                                                              //~1A26I~
    	//************                                                 //~1A26I~
    	if (Poptions==null)                                        //~1A26I~
        	return "";                                             //~1A26I~
        return Poptions;                                           //~1A26I~
    }                                                              //~1A26I~
//******************                                               //~vad2I~
//*Charset                                                         //~vad2I~
//******************                                               //~vad2I~
    public int chkCharset(String Pcharset)                         //~vad2I~
    {                                                              //~vad2I~
    	int rc=0;                                                  //~vad2I~
    	//************                                             //~vad2I~
        if (AxeJNI.isValidCharset(Pcharset))                       //~vad2I~
        {	                                                       //~vad2I~
        	Utils.showToastLong(R.string.Info_CharsetChanged);     //~vad2I~
        }                                                          //~vad2I~
        else                                                       //~vad2I~
        {                                                          //~vad2I~
        	Utils.showToastLong(R.string.Err_CharsetChange,Pcharset);//~vad2I~
            rc=4;                                                  //~vad2I~
        }                                                          //~vad2I~
        return rc;                                                 //~vad2I~
    }                                                              //~vad2I~
//**************************************                           //~1A26R~
//*static for called from AxeG                                     //~vay9R~
//*check internal option                                             //~vay9I~
//*allow seperator is space only                                   //~1A26I~
//**************************************                           //~1824I~//~1A26R~
//  public static String chkInternalOptions(boolean PaxeGinit,String Poptions)//~vay9R~
    public static void   chkInternalOptions(boolean PaxeGinit,int Ptraceopt,int Pdumpopt,int Pdebugopt)//~vay9I~
    {                                                              //~1824I~
//    	boolean err=false;                                         //~vay9R~
//      String upper;                                              //~vay9R~
        int dump=0,trace=0;                                        //~1926R~
//      int remap=0;                                               //~vay9R~
        int debug=0;//~v6k1I~
    //************                                                 //~1824I~
	    if (!AxeG.isDebuggable)                                    //~vai3I~
        {                                                          //~vai3I~
            AxeG.optDump=0;                                        //~vai3I~
        	AxeG.optTrace=0;                                       //~vai3I~
        	AxeG.optDebug=0;                                       //~vay0I~
//      	return Poptions;                                       //~vay9R~
        	return;                                                //~vay9I~
        }                                                          //~vai3I~
//        upper=Poptions.toUpperCase();                            //~vay9R~
//    //*trace option                                              //~vay9R~
//        if (upper.contains("NOTRACE"))                           //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("NOTRACE","");                   //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("TRACE2"))                            //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("TRACE2","");                    //~vay9R~
//            trace=AxeG.TRACEO_REOPEN;                            //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("TRACE"))                             //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("TRACE","");                     //~vay9R~
//            trace=AxeG.TRACEO_ON;                                //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("NOLOG"))                             //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("NOLOG","");                     //~vay9R~
//        }                                                        //~vay9R~
//        else                                                     //~vay9R~
//        if (upper.contains("LOG"))                               //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("LOG","");                       //~vay9R~
//            trace|=AxeG.TRACEO_LOGCAT;                           //~vay9R~
//        }                                                        //~vay9R~
//    //*dump option,dump2 activate dump at after createScreen     //~vay9R~
//        if (upper.contains("NODUMP"))                            //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("NODUMP","");                    //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("DUMP2"))                             //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("DUMP2","");                     //~vay9R~
//            dump=2;                                              //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("DUMP"))                              //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("DUMP","");                      //~vay9R~
//            dump=1;                                              //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("REMAP"))                             //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("REMAP","");  //clear once detected//~vay9R~
//            trace|=AxeG.TRACEO_REMAP;                            //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("DEBUGA"))                            //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("DEBUGA","");  //clear once detected//~vay9R~
//            debug|=AxeG.DEBUGO_ABEND;                            //~vay9R~
//        }                                                        //~vay9R~
//        if (upper.contains("DEBUGE"))                            //~vay9R~
//        {                                                        //~vay9R~
//            upper=upper.replace("DEBUGE","");  //clear once detected//~vay9R~
//            debug|=AxeG.DEBUGO_UERREXIT;                         //~vay9R~
//        }                                                        //~vay9R~
    trace=Ptraceopt & (AxeG.TRACEO_REOPEN | AxeG.TRACEO_ON | AxeG.TRACEO_REMAP | AxeG.TRACEO_LOGCAT);//~vay9I~
  	dump=Pdumpopt & 3;                                             //~vay9I~
//  debug=Pdebugopt & (AxeG.DEBUGO_ABEND | AxeG.DEBUGO_UERREXIT);  //~vay9I~//~vc2RR~
    debug=Pdebugopt;                                               //~vc2RI~
	//*******                                                      //~1824I~
    	if (trace!=AxeG.optTrace)                                  //~1824I~
        {                                                          //~1824I~
        	AxeG.optTrace=trace;                                   //~1824I~
        	if (PaxeGinit)                                         //~1922I~
		    	if ((trace & AxeG.TRACEO_ON)!=0)                    //~1926R~
			    	AxeJNI.setTraceOption(trace);  //with TRACEO_LOGCAT//~1926I~
                else                                               //~1926I~
			    	AxeJNI.setTraceOption(0);                      //~1926I~
            else                                                   //~1922I~
		    	AxeJNI.setTraceOption(trace);                      //~1926R~
        }                                                          //~1824I~
    	if (dump!=AxeG.optDump)                                    //~1922R~
        {                                                          //~1824I~
        	if (PaxeGinit)                                         //~1922I~
        		Dump.setOption(dump==1);     //1 only when called from AxeG//~1922R~
            else                                                   //~1922I~
        		Dump.setOption(dump!=0);     //2 by dialog         //~1922I~
            AxeG.optDump=dump;                                     //~1922I~
        }                                                          //~1824I~
    	if (debug!=AxeG.optDebug)                                  //~vay0I~
        {                                                          //~vay0I~
        	AxeG.optDebug=debug;                                   //~vay0I~
		    AxeJNI.setDebugOption(debug);                          //~vay0I~
        }                                                          //~vay0I~
	//*******                                                      //~1824I~
//        upper=upper.trim();                                      //~vay9R~
//        if (!upper.equals(""))                                   //~vay9R~
//        {                                                        //~vay9R~
//            Utils.showToastLong(R.string.Err_InternalOption,upper);//~vay9R~
//            err=true;                                            //~vay9R~
//        }                                                        //~vay9R~
//        if (err)                                                 //~vay9R~
//            return "ERR:"+Poptions;                              //~vay9R~
//        return Poptions;                                         //~vay9R~
    }                                                              //~1824I~
//**************************************                           //~vay9I~
    private void initInternalOption()                              //~vay9I~
    {                                                              //~vay9I~
    	int buttonid;                                              //~vay9I~
    	int trace=AxeG.optTrace;                                   //~vay9I~
    	int dump=AxeG.optDump;                                     //~vay9I~
    	int debug=AxeG.optDebug;                                   //~vay9I~
    	if ((trace & AxeG.TRACEO_REOPEN)!=0)                           //~vay9I~
        	buttonid=R.id.DEBUG_TRACE_ON2;                         //~vay9I~
        else                                                       //~vay9I~
    	if ((trace & AxeG.TRACEO_ON)!=0)                               //~vay9I~
        	buttonid=R.id.DEBUG_TRACE_ON;                          //~vay9I~
        else                                                       //~vay9I~
        	buttonid=R.id.DEBUG_TRACE_OFF;                         //~vay9I~
        rgTrace.check(buttonid);                                   //~vay9I~
                                                                   //~vay9I~
        cbLog.setChecked((trace & AxeG.TRACEO_LOGCAT)!=0);         //~vay9I~
                                                                   //~vay9I~
    	if ((dump & 1)!=0)                                         //~vay9I~
        	buttonid=R.id.DEBUG_DUMP_ON;                           //~vay9I~
        else                                                       //~vay9I~
    	if ((dump & 2)!=0)                                         //~vay9I~
        	buttonid=R.id.DEBUG_DUMP_ON2;                          //~vay9I~
        else                                                       //~vay9I~
        	buttonid=R.id.DEBUG_DUMP_OFF;                          //~vay9I~
        rgDump.check(buttonid);                                    //~vay9I~
                                                                   //~vay9I~
        cbRemap.setChecked((trace & AxeG.TRACEO_REMAP)!=0);        //~vay9I~
        cbAbend.setChecked((debug & AxeG.DEBUGO_ABEND)!=0);        //~vay9I~
        cbUerrexit.setChecked((debug & AxeG.DEBUGO_UERREXIT)!=0);  //~vay9I~
        cbDebug_Help_ReverseLang.setChecked((debug & AxeG.DEBUGO_HELP_REVERSELANG)!=0);//~vc2RI~
    }                                                              //~vay9I~
//**************************************                           //~vay9I~
    private void setInternalOption()                               //~vay9I~
    {                                                              //~vay9I~
    	int buttonid,trace,dump,debug;                             //~vay9I~
    //*******************************                              //~vay9I~
        buttonid=rgTrace.getCheckedRadioButtonId();                //~vay9I~
        switch(buttonid)                                           //~vay9I~
        {                                                          //~vay9I~
        case R.id.DEBUG_TRACE_ON:                                  //~vay9I~
            trace=AxeG.TRACEO_ON;                                  //~vay9I~
            break;                                                 //~vay9I~
        case R.id.DEBUG_TRACE_ON2:                                  //~vay9I~
            trace=AxeG.TRACEO_REOPEN;                               //~vay9I~
            break;                                                 //~vay9I~
        default:                                                   //~vay9I~
            trace=0;                                               //~vay9I~
            break;                                                 //~vay9I~
        }                                                          //~vay9I~
        buttonid=rgDump.getCheckedRadioButtonId();                 //~vay9I~
        switch(buttonid)                                           //~vay9I~
        {                                                          //~vay9I~
        case R.id.DEBUG_DUMP_ON:                                   //~vay9I~
            dump=1;                                                //~vay9I~
            break;                                                 //~vay9I~
        case R.id.DEBUG_DUMP_ON2:                                   //~vay9I~
            dump=2;                                                //~vay9I~
            break;                                                 //~vay9I~
        default:                                                   //~vay9I~
            dump=0;                                                //~vay9I~
            break;                                                 //~vay9I~
        }                                                          //~vay9I~
        if (cbLog.isChecked())                                     //~vay9I~
        	trace |= AxeG.TRACEO_LOGCAT;                           //~vay9I~
        if (cbRemap.isChecked())                                   //~vay9I~
        	trace |= AxeG.TRACEO_REMAP;                            //~vay9I~
        debug=0;                                                   //~vay9I~
        if (cbAbend.isChecked())                                   //~vay9I~
        	debug|=AxeG.DEBUGO_ABEND;                              //~vay9I~
        if (cbUerrexit.isChecked())                                //~vay9I~
        	debug|=AxeG.DEBUGO_UERREXIT;                           //~vay9I~
        if (cbDebug_Help_ReverseLang.isChecked())                  //~vc2RI~
        	debug|=AxeG.DEBUGO_HELP_REVERSELANG;                   //~vc2RI~
		chkInternalOptions(false/*not AxeG*/,trace,dump,debug);    //~vay9I~
                                                                   //~vay9I~
        AxeG.setParameter(AxeG.PREFKEY_DEBUG_TRACE,trace);//putPreference//~vay9I~
        AxeG.setParameter(AxeG.PREFKEY_DEBUG_DUMP,dump);//putPreference//~vay9I~
        AxeG.setParameter(AxeG.PREFKEY_DEBUG_DEBUG,debug);//putPreference//~vay9I~
        AG.setDebugHelpLang();                                     //+vc2RI~
    }
    public static void chkHomeButtonKey(boolean PaxeGinit/*from AxeG*/,int Prgbuttonid)//~vayaI~
    {                                                              //~vayaI~
        int keyvalue,buttonid;                                     //~vayaI~
    //************                                                 //~vayaI~
    	buttonid=Prgbuttonid;                                        //~vayaI~
	    switch(Prgbuttonid)                                          //~vayaI~
    	{                                                          //~vayaI~
    	case R.id.HOMEBUTTON_HOME:                                 //~vayaI~
        	keyvalue=AxeKeyValue.GDK_Home;                         //~vayaI~
            break;                                                 //~vayaI~
    	case R.id.HOMEBUTTON_ESC:                                  //~vayaI~
        	keyvalue=AxeKeyValue.GDK_Escape;                       //~vayaI~
            break;                                                 //~vayaI~
    	case R.id.HOMEBUTTON_ENTER:                                //~vayaI~
        	keyvalue=AxeKeyValue.GDK_Return;                       //~vayaI~
            break;                                                 //~vayaI~
        default:                                                   //~vayaI~
        	buttonid=R.id.HOMEBUTTON_NONE;                         //~vayaI~
        	keyvalue=0;                                            //~vayaI~
    	}                                                          //~vayaI~
    	homebuttonId=buttonid;                                     //~vayaI~
    	homebuttonKeyValue=keyvalue;                               //~vayaI~
        if (Dump.Y) Dump.println("chkHomeButtonKey:buttonid="+Integer.toHexString(Prgbuttonid)+",key="+Integer.toHexString(keyvalue));//~vayaI~
    }                                                              //~vayaI~
    //***************************************************          //~vc1pI~
    public static void updateEnvPath(boolean PswJNICall)           //~vc1pI~
    {                                                              //~vc1pI~
	    String ev;                                                 //~vc1pI~
        String old=new String(Gxeh.envVarPATH);                    //~vc1pR~
        String cpath=Utils.getResourceString(R.string.Setup_EnvPathAdd);//$PATH1//~vc1pR~
        String mypath=Gxeh.addPath;                                //~vc1pR~
        int pos=old.indexOf(mypath);                               //~vc1pR~
        String nativePath=Gxeh.envVarNativePATH;                   //~vc1pI~
        ev=Gxeh.envPath.replace(cpath,Gxeh.addPath)+(nativePath==null ? "": ":"+nativePath);//~vc1pR~
        Gxeh.envVarPATH=ev;                                        //~vc1pI~
        if (PswJNICall)                                            //~vc1pI~
	        AxeJNI.updateEnvPath();                                   //~vc1pI~
    }                                                              //~vc1pI~
}                                                                  //~1528R~
